// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityDataBaseImplement;

namespace UniversityDataBaseImplement.Migrations
{
    [DbContext(typeof(UniversityDatabase))]
    [Migration("20220521194918_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Attestation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeaneryLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentGradebookNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attestations");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Deanery", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable("Deaneries");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Department", b =>
                {
                    b.Property<string>("DepartmentLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentLogin");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.DisciplineLearningPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("LearningPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("LearningPlanId");

                    b.ToTable("DisciplineLearningPlans");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.InterimReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfExam")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InterimReports");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.LearningPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("StreamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LearningPlans");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.LearningPlanStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GradebookNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LearningPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradebookNumber");

                    b.HasIndex("LearningPlanId");

                    b.ToTable("LearningPlanStudents");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.LearningPlanTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LearningPlanId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningPlanId");

                    b.HasIndex("TeacherId");

                    b.ToTable("LearningPlanTeacher");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Student", b =>
                {
                    b.Property<string>("GradebookNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradebookNumber");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("UniversityDataBaseImplementation.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("GradebookNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GradebookNumber");

                    b.ToTable("StudentDisciplines");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.DisciplineLearningPlan", b =>
                {
                    b.HasOne("UniversityDataBaseImplement.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityDataBaseImplement.Models.LearningPlan", "LearningPlan")
                        .WithMany()
                        .HasForeignKey("LearningPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("LearningPlan");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.LearningPlanStudent", b =>
                {
                    b.HasOne("UniversityDataBaseImplement.Models.Student", "Student")
                        .WithMany("LearningPlanStudents")
                        .HasForeignKey("GradebookNumber");

                    b.HasOne("UniversityDataBaseImplement.Models.LearningPlan", "LearningPlan")
                        .WithMany("LearningPlanStudents")
                        .HasForeignKey("LearningPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearningPlan");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.LearningPlanTeacher", b =>
                {
                    b.HasOne("UniversityDataBaseImplement.Models.LearningPlan", "LearningPlan")
                        .WithMany("LearningPlanTeachers")
                        .HasForeignKey("LearningPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityDataBaseImplement.Models.Teacher", "Teacher")
                        .WithMany("LearningPlanTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearningPlan");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UniversityDataBaseImplementation.Models.StudentDiscipline", b =>
                {
                    b.HasOne("UniversityDataBaseImplement.Models.Discipline", "Discipline")
                        .WithMany("StudentDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityDataBaseImplement.Models.Student", "Student")
                        .WithMany("StudentDisciplines")
                        .HasForeignKey("GradebookNumber");

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Discipline", b =>
                {
                    b.Navigation("StudentDisciplines");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.LearningPlan", b =>
                {
                    b.Navigation("LearningPlanStudents");

                    b.Navigation("LearningPlanTeachers");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Student", b =>
                {
                    b.Navigation("LearningPlanStudents");

                    b.Navigation("StudentDisciplines");
                });

            modelBuilder.Entity("UniversityDataBaseImplement.Models.Teacher", b =>
                {
                    b.Navigation("LearningPlanTeachers");
                });
#pragma warning restore 612, 618
        }
    }
}
